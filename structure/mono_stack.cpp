#include <iostream>
using namespace std;
const int N = 100010;
int stk[N], tt;

int main()
{
    int n;
    cin >> n;
    //每个元素进栈的时候如果栈里什么都没有说明左边没有比它小的
    //每进一个新元素，会把比它大的元素都掏出栈，但是如果它最大的话就它直接入栈。这样栈中留下的就只有比当前数小的数了，大的都被踢走了，加快了速度（比如下例2把3，4踢走）
    //理解为0 1 x，不知道x是不是比1大，不能把1踢出来；但是如果是1 0 x，无论如何第一个比x小的也不可能是1，所以0入栈时就可以把1踢掉了
    //如果把比它大的元素都掏出栈之后，栈空了，说明左边没有比它小的了

    //比如 3 4 2 7
    //3进栈时为空，所有直接输出-1 , 3进栈
    //4进栈时3比它小，所以输出3，4入栈
    //2进栈时栈顶元素4，3大于它，他们都出栈，出栈后栈空了，所以是-1
    while (n -- )
    {
        int x;
        scanf("%d", &x);
        while (tt && stk[tt] >= x) tt -- ;//如果栈顶元素大于当前待入栈元素，则出栈
        if (!tt) printf("-1 ");//如果栈空，则没有比该元素小的值。
        else printf("%d ", stk[tt]);//栈顶元素就是左侧第一个比它小的元素。
        stk[ ++ tt] = x;
    }
    return 0;
}